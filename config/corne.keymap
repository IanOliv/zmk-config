/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define Default 0 
#define Lower 1
#define Raise 2
#define Utils 3
#define Conf   4
#define VSCode 5                 


/ {
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      tapping-term-ms = <150>;
      quick-tap-ms = <0>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
   };
  };




  keymap {
    compatible = "zmk,keymap";
      default_layer {
        display-name = "base";
        bindings = <
   &kp ESC   &kp Q &kp W &kp E &kp R &kp T                             &kp Y &kp U  &kp I &kp O &kp P &kp BSPC
  // &kp TAB   &hm LCTRL A &hm LGUI S &hm LALT D &hm LSHIFT F &kp G      &kp H &hm LSHIFT J  &hm LALT K   &hm LGUI L   &hm LCTRL SEMI  &kp RET 
   &kp TAB   &kp A &kp S &kp D &kp F &kp G                             &kp H &kp J &kp K &kp L &kp SEMI &kp RET 
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B                             &kp N &kp M &kp COMMA &kp DOT &mo Lower &kp RALT
                &kp LCTRL &kp LALT &kp SPACE                           &kp SPACE &kp DOWN &kp UP
                        >;
                };
      lower_layer {
        display-name = "lower";
        bindings = <
   &kp APOS   &kp N1   &kp N2   &kp N3   &kp N4   &kp N5                         &kp N6    &kp N7   &kp N8 &kp N9  &kp N0 &kp BSPC
   &trans &trans &trans &trans &trans &trans                                     &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans   &trans   &trans   &trans                          &kp APOS &kp PLUS  &kp PIPE  &kp FSLH &kp PIPE &kp TILDE
                &kp LEFT &kp RIGHT &kp LGUI                                      &kp RET  &trans   &mo Conf
                        >;
                };
      raise_layer {
        display-name = "raise";
        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
      utils {
        display-name = "utils";
        bindings = <
   &kp TAB   &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };

        conf {
          display-name = "conf";
          bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };         
        vscode {
          display-name = "vscode";
          bindings = <
   &kp ESC    &kp LC(P)     &kp LC(E)      &kp LC(F)      &kp LC(LS(F))  &kp LC(GRAVE)      &kp LC(W)  &kp LC(LS(T)) &kp LC(TAB)   &kp LC(PG_UP) &kp LC(PG_DN) &kp BSPC
   &kp TAB    &kp LC(A)     &kp LC(S)      &kp LC(D)      &kp LC(K)      &kp LC(H)          &kp LEFT   &kp DOWN      &kp UP        &kp RIGHT     &kp LC(B)     &kp RET
   &kp LSHFT  &kp LC(Z)     &kp LC(X)      &kp LC(C)      &kp LC(V)      &kp LC(B)          &kp LC(N)  &kp LC(M)     &kp LC(COMMA) &kp LC(DOT)   &mo Lower     &kp LC(LS(FSLH))
                                           &kp LCTRL        &kp LALT       &kp SPACE          &kp LC(ENTER) &kp LC(PLUS) &kp LC(MINUS)
                        >;
                };             
                
          
        };
};